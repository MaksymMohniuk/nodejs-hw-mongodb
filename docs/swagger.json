{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of contacts app\n"
  },
  "servers": [
    {
      "url": "<http://localhost:3000>"
    },
    {
      "url": "<https://example.com/api/v1>"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of contacts with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "_id",
                "name",
                "phoneNumber",
                "email",
                "isFavorite",
                "contactType"
              ]
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contactModel"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 2
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contactModel": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "667abd055b7c7f7680f50275"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "Bibi Gul"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "76876968708"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "bibi_gul@gmail.com"
          },
          "isFavorite": {
            "description": "Is the contact a favorite",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "photo": {
            "description": "Link to contact's photo or avatar",
            "type": "string",
            "example": "https://res.cloudinary.com/dlfilpb3i/image/upload/v1719910163/xnml08whâ€¦"
          },
          "userId": {
            "description": "Id of the user who created the contact",
            "type": "string",
            "example": "667abd055b7c7f7680f50275"
          },
          "createdAt": {
            "description": "Database timestamp (auto-generated)",
            "type": "string",
            "example": "2024-07-01T19:56:45.748+00:00"
          },
          "updatedAt": {
            "description": "Database timestamp (auto-generated)",
            "type": "string",
            "example": "2024-07-02T08:49:23.457+00:00"
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "123456789"
          },
          "userId": {
            "description": "Contact's user identification",
            "type": "string",
            "example": "65e4decdd286b30065d54a78"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "123456@test.com"
          },
          "isFavourite": {
            "description": "Whether this contact is user's favourite",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Type of the contact",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          },
          "photo": {
            "description": "Link to contacts's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}